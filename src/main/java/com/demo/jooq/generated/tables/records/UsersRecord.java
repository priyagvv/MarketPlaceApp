/*
 * This file is generated by jOOQ.
 */
package com.demo.jooq.generated.tables.records;


import com.demo.jooq.generated.tables.Users;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record5<String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1461079953;

    /**
     * Setter for <code>test.USERS.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.USERS.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>test.USERS.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.USERS.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.USERS.ROLE</code>.
     */
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.USERS.ROLE</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.USERS.creation_time</code>.
     */
    public void setCreationTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.USERS.creation_time</code>.
     */
    public LocalDateTime getCreationTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>test.USERS.modification_time</code>.
     */
    public void setModificationTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.USERS.modification_time</code>.
     */
    public LocalDateTime getModificationTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.ROLE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Users.USERS.CREATION_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Users.USERS.MODIFICATION_TIME;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public LocalDateTime component4() {
        return getCreationTime();
    }

    @Override
    public LocalDateTime component5() {
        return getModificationTime();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public LocalDateTime value4() {
        return getCreationTime();
    }

    @Override
    public LocalDateTime value5() {
        return getModificationTime();
    }

    @Override
    public UsersRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord value4(LocalDateTime value) {
        setCreationTime(value);
        return this;
    }

    @Override
    public UsersRecord value5(LocalDateTime value) {
        setModificationTime(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String username, String password, String role, LocalDateTime creationTime, LocalDateTime modificationTime) {
        super(Users.USERS);

        set(0, username);
        set(1, password);
        set(2, role);
        set(3, creationTime);
        set(4, modificationTime);
    }
}
