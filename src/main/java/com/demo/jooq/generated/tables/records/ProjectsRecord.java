/*
 * This file is generated by jOOQ.
 */
package com.demo.jooq.generated.tables.records;


import com.demo.jooq.generated.tables.Projects;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectsRecord extends UpdatableRecordImpl<ProjectsRecord> implements Record6<Integer, String, String, Double, LocalDateTime, Double> {

    private static final long serialVersionUID = 157092288;

    /**
     * Setter for <code>test.PROJECTS.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.PROJECTS.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.PROJECTS.status</code>.
     */
    public void setStatus(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.PROJECTS.status</code>.
     */
    public String getStatus() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.PROJECTS.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.PROJECTS.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.PROJECTS.max_budget</code>.
     */
    public void setMaxBudget(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.PROJECTS.max_budget</code>.
     */
    public Double getMaxBudget() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>test.PROJECTS.End_date</code>.
     */
    public void setEndDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.PROJECTS.End_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>test.PROJECTS.lowest_bid</code>.
     */
    public void setLowestBid(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.PROJECTS.lowest_bid</code>.
     */
    public Double getLowestBid() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Double, LocalDateTime, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, Double, LocalDateTime, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Projects.PROJECTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Projects.PROJECTS.STATUS;
    }

    @Override
    public Field<String> field3() {
        return Projects.PROJECTS.DESCRIPTION;
    }

    @Override
    public Field<Double> field4() {
        return Projects.PROJECTS.MAX_BUDGET;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Projects.PROJECTS.END_DATE;
    }

    @Override
    public Field<Double> field6() {
        return Projects.PROJECTS.LOWEST_BID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStatus();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Double component4() {
        return getMaxBudget();
    }

    @Override
    public LocalDateTime component5() {
        return getEndDate();
    }

    @Override
    public Double component6() {
        return getLowestBid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStatus();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Double value4() {
        return getMaxBudget();
    }

    @Override
    public LocalDateTime value5() {
        return getEndDate();
    }

    @Override
    public Double value6() {
        return getLowestBid();
    }

    @Override
    public ProjectsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectsRecord value2(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ProjectsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProjectsRecord value4(Double value) {
        setMaxBudget(value);
        return this;
    }

    @Override
    public ProjectsRecord value5(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public ProjectsRecord value6(Double value) {
        setLowestBid(value);
        return this;
    }

    @Override
    public ProjectsRecord values(Integer value1, String value2, String value3, Double value4, LocalDateTime value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectsRecord
     */
    public ProjectsRecord() {
        super(Projects.PROJECTS);
    }

    /**
     * Create a detached, initialised ProjectsRecord
     */
    public ProjectsRecord(Integer id, String status, String description, Double maxBudget, LocalDateTime endDate, Double lowestBid) {
        super(Projects.PROJECTS);

        set(0, id);
        set(1, status);
        set(2, description);
        set(3, maxBudget);
        set(4, endDate);
        set(5, lowestBid);
    }
}
